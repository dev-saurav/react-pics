{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","api/unsplash.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","htmlFor","type","value","onChange","setState","target","React","Component","ImageCard","setSpans","imageHeight","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","img","urls","description","style","gridRowEnd","ref","src","regular","alt","ImageList","imagesList","images","map","key","id","axios","create","baseURL","headers","Authorization","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","length","ReactDOM","render","document","querySelector"],"mappings":"sPA2BeA,E,4MAxBXC,MAAQ,CACJC,KAAM,I,EAGVC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACrC,yBAAKK,UAAU,SACX,2BAAOE,QAAQ,eAAf,gBACA,2BAAOC,KAAK,OAAOC,MAAOH,KAAKR,MAAMC,KAAMW,SAAU,SAAAT,GAAC,OAAI,EAAKU,SAAS,CAAEZ,KAAME,EAAEW,OAAOH,kB,GAhBzFI,IAAMC,WC0BfC,G,wDAzBX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IASVa,SAAW,WACP,IAAMC,EAAc,EAAKC,SAASC,QAAQC,aACpCC,EAAQC,KAAKC,KAAKN,EAAc,IACtC,EAAKN,SAAS,CAAEU,MAAOA,KAXvB,EAAKvB,MAAQ,CAAEuB,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHP,E,gEAOflB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAQ9C,IAAD,EACyBV,KAAKH,MAAMuB,IAAjCC,EADH,EACGA,KAAMC,EADT,EACSA,YACd,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,SACzC,yBAAKU,IAAKzB,KAAKY,SAAUc,IAAKL,EAAKM,QAASC,IAAKN,S,GApBzCf,IAAMC,YCGf,SAASqB,EAAT,GAAgC,IACrCC,EADoC,EAAVC,OACNC,KAAI,SAAAZ,GAAG,OAAI,kBAAC,EAAD,CAAWa,IAAKb,EAAIc,GAAId,IAAKA,OAClE,OACI,yBAAKrB,UAAU,cACV+B,G,YCJEK,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2DCuBRC,E,4MAvBXhD,MAAQ,CAAEuC,OAAQ,I,EAElBU,e,uCAAiB,WAAOhD,GAAP,eAAAiD,EAAA,sEACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CACJC,MAAOrD,KAHF,OACPsD,EADO,OAMb,EAAK1C,SAAS,CAAE0B,OAAQgB,EAASC,KAAKC,UANzB,2C,6GASb,OACI,yBAAK1B,MAAO,CAAE2B,UAAW,QAAUnD,UAAU,gBACzC,kBAAC,EAAD,CAAWD,SAAUE,KAAKyC,iBAC1B,uCACYzC,KAAKR,MAAMuC,OAAOoB,OAD9B,YAGA,kBAAC,EAAD,CAAWpB,OAAQ/B,KAAKR,MAAMuC,c,GAnB5BxB,IAAMC,WCFxB4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.dcbbf078.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        term: \"\"\r\n    };\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.term)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"ImageSearch\">Image Search</label>\r\n                        <input type=\"text\" value={this.state.term} onChange={e => this.setState({ term: e.target.value })} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { spans: 0 };\r\n        this.imageRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        //wait till the image is loaded\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n    }\r\n    //make the image span grid according to the size\r\n    setSpans = () => {\r\n        const imageHeight = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(imageHeight / 10);\r\n        this.setState({ spans: spans });\r\n    }\r\n    render() {\r\n        const { urls, description } = this.props.img;\r\n        return (\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n                <img ref={this.imageRef} src={urls.regular} alt={description} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport './ImageList.css';\r\n\r\nimport ImageCard from './ImageCard';\r\n\r\nexport default function ImageList({ images }) {\r\n    const imagesList = images.map(img => <ImageCard key={img.id} img={img} />)\r\n    return (\r\n        <div className='image-list'>\r\n            {imagesList}\r\n        </div>\r\n    )\r\n}\r\n","//config file for unsplash\r\n\r\nimport axios from 'axios';\r\n\r\n//create a instance of axios with pre-written configuration\r\nexport default axios.create({\r\n    baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: 'Client-ID 3pm33vS_CbL1702sCNe1_kUD5jS2xTXI0q2g_IJL1RM'\r\n    }\r\n})","import React from 'react';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\nimport unsplash from '../api/unsplash';\r\n\r\nclass App extends React.Component {\r\n    //inital state\r\n    state = { images: [] };\r\n    //fire the api on press of enter\r\n    onSearchSubmit = async (term) => {\r\n        const response = await unsplash.get('/search/photos', {\r\n            params: {\r\n                query: term\r\n            }\r\n        });\r\n        this.setState({ images: response.data.results });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: '10px' }} className=\"ui container\">\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <div>\r\n                    Found: {this.state.images.length} images.\r\n                </div>\r\n                <ImageList images={this.state.images} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}